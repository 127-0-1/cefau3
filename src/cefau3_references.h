#pragma once
#include "inc.h"

CefBrowser* WINAPI Cef_GetBrowser(Cefau3_Handler* handler);
bool WINAPI CefBrowser_CanGoBack(CefBrowser* browser);
bool WINAPI CefBrowser_CanGoForward(CefBrowser* browser);
void WINAPI CefBrowser_StopLoad(CefBrowser* browser);
void WINAPI CefBrowser_GoForward(CefBrowser* browser);
void WINAPI CefBrowser_GoBack(CefBrowser* browser);
bool WINAPI CefBrowser_IsLoading(CefBrowser* browser);
bool WINAPI CefBrowser_IsPopup(CefBrowser* browser);
bool WINAPI CefBrowser_HasDocument(CefBrowser* browser);
void WINAPI CefBrowser_Reload(CefBrowser* browser);
int WINAPI CefBrowser_GetIdentifier(CefBrowser* browser);
void WINAPI CefBrowser_ReloadIgnoreCache(CefBrowser* browser);
int WINAPI CefBrowser_GetFrameCount(CefBrowser* browser);
CefBrowserHost* WINAPI CefBrowser_GetHost(CefBrowser* browser);
CefFrame* WINAPI CefBrowser_GetMainFrame(CefBrowser* browser);
void WINAPI CefFrame_Copy(CefFrame* frame);
void WINAPI CefFrame_Cut(CefFrame* frame);
void WINAPI CefFrame_Paste(CefFrame* frame);
void WINAPI CefFrame_Delete(CefFrame* frame);
void WINAPI CefFrame_SelectAll(CefFrame* frame);
CefBrowser* WINAPI CefFrame_GetBrowser(CefFrame* frame);
LPCWSTR WINAPI CefFrame_GetName(CefFrame* frame);
int64 WINAPI CefFrame_GetIdentifier(CefFrame* frame);
CefFrame* WINAPI CefFrame_GetParent(CefFrame* frame);
void WINAPI CefFrame_ExecuteJavaScript(CefFrame* frame, LPCWSTR url, LPCWSTR code);
LPCWSTR WINAPI CefFrame_GetText(CefFrame* frame);
void WINAPI CefFrame_ViewSource(CefFrame* frame);
CefV8Context* WINAPI CefFrame_GetV8Context(CefFrame* frame);
void WINAPI CefFrame_Undo(CefFrame* frame);
void WINAPI CefFrame_Redo(CefFrame* frame);
void WINAPI CefFrame_LoadURL(CefFrame* frame, LPCWSTR url);
LPCWSTR WINAPI CefContextMenuParam_GetFrameUrl(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetLinkUrl(CefContextMenuParams* menuparam);
int WINAPI CefContextMenuParam_GetXCoord(CefContextMenuParams* menuparam);
int WINAPI CefContextMenuParam_GetYCoord(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetTitleText(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetPageUrl(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetSourceUrl(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetUnfilteredLinkUrl(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetSelectionText(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetMisspelledWord(CefContextMenuParams* menuparam);
LPCWSTR WINAPI CefContextMenuParam_GetFrameCharset(CefContextMenuParams* menuparam);
bool WINAPI CefContextMenuParam_HasImageContents(CefContextMenuParams* menuparam);
bool WINAPI CefContextMenuParam_IsCustomMenu(CefContextMenuParams* menuparam);
bool WINAPI CefContextMenuParam_IsEditable(CefContextMenuParams* menuparam);
bool WINAPI CefContextMenuParam_IsSpellCheckEnabled(CefContextMenuParams* menuparam);
bool WINAPI CefContextMenuParam_IsPepperMenu(CefContextMenuParams* menuparam);
bool WINAPI CefMenuModel_AddCheckItem(CefMenuModel* model, int cmdID, LPCWSTR string);
bool WINAPI CefMenuModel_AddItem(CefMenuModel* model, int cmdID, LPCWSTR string);
bool WINAPI CefMenuModel_AddRadioItem(CefMenuModel* model, int cmdID, LPCWSTR string, int groudID);
bool WINAPI CefMenuModel_AddSeparator(CefMenuModel* model);
bool WINAPI CefMenuModel_AddSubMenu(CefMenuModel* model, int cmdID, LPCWSTR string);
bool WINAPI CefMenuModel_Clear(CefMenuModel* model);
bool WINAPI CefMenuModel_IsChecked(CefMenuModel* model, int cmdID);
bool WINAPI CefMenuModel_IsCheckedAt(CefMenuModel* model, int index);
bool WINAPI CefMenuModel_IsEnabled(CefMenuModel* model, int cmdID);
bool WINAPI CefMenuModel_IsEnabledAt(CefMenuModel* model, int index);
bool WINAPI CefMenuModel_IsSubMenu(CefMenuModel* model);
bool WINAPI CefMenuModel_IsVisible(CefMenuModel* model, int cmdID);
bool WINAPI CefMenuModel_IsVisibleAt(CefMenuModel* model, int index);
int WINAPI CefMenuModel_GetCommandIdAt(CefMenuModel* model, int index);
int WINAPI CefMenuModel_GetCount(CefMenuModel* model);
int WINAPI CefMenuModel_GetGroupId(CefMenuModel* model, int cmdID);
int WINAPI CefMenuModel_GetGroupIdAt(CefMenuModel* model, int index);
int WINAPI CefMenuModel_GetIndexOf(CefMenuModel* model, int cmdID);
LPCWSTR WINAPI CefMenuModel_GetLabel(CefMenuModel* model, int cmdID);
LPCWSTR WINAPI CefMenuModel_GetLabelAt(CefMenuModel* model, int index);
CefMenuModel* WINAPI CefMenuModel_GetSubMenu(CefMenuModel* model, int cmdID);
CefMenuModel* WINAPI CefMenuModel_GetSubMenuAt(CefMenuModel* model, int index);
bool WINAPI CefMenuModel_SetChecked(CefMenuModel* model, int cmdID, bool check);
bool WINAPI CefMenuModel_SetCheckedAt(CefMenuModel* model, int index, bool check);
bool WINAPI CefMenuModel_SetCommandIdAt(CefMenuModel* model, int index, int cmdID);
bool WINAPI CefMenuModel_SetEnabled(CefMenuModel* model, int cmdID, bool enable);
bool WINAPI CefMenuModel_SetEnabledAt(CefMenuModel* model, int index, bool enable);
bool WINAPI CefMenuModel_SetGroupId(CefMenuModel* model, int cmdID, int groudID);
bool WINAPI CefMenuModel_SetGroupIdAt(CefMenuModel* model, int index, int groudID);
bool WINAPI CefMenuModel_SetLabel(CefMenuModel* model, int cmdID, LPCWSTR label);
bool WINAPI CefMenuModel_SetLabelAt(CefMenuModel* model, int index, LPCWSTR label);
bool WINAPI CefMenuModel_SetVisible(CefMenuModel* model, int cmdID, bool visible);
bool WINAPI CefMenuModel_SetVisibleAt(CefMenuModel* model, int index, bool visible);
void WINAPI CefDragData_AddFile(CefDragData* dragdata, LPCWSTR path, LPCWSTR display_name);
LPCWSTR WINAPI CefDragData_GetFileName(CefDragData* dragdata);
LPCWSTR WINAPI CefDragData_GetFragmentBaseURL(CefDragData* dragdata);
LPCWSTR WINAPI CefDragData_GetFragmentHtml(CefDragData* dragdata);
LPCWSTR WINAPI CefDragData_GetFragmentText(CefDragData* dragdata);
LPCWSTR WINAPI CefDragData_GetLinkMetadata(CefDragData* dragdata);
LPCWSTR WINAPI CefDragData_GetLinkTitle(CefDragData* dragdata);
LPCWSTR WINAPI CefDragData_GetLinkURL(CefDragData* dragdata);